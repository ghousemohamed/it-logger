{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","_ref5","Object","asyncToGenerator","regenerator_default","a","mark","_callee5","dispatch","res","data","wrap","_context5","prev","next","fetch","concat","sent","json","payload","t0","response","statusText","stop","_x5","apply","this","arguments","_ref","useRef","react_default","createElement","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","_ref3","_callee3","_context3","method","_x3","setCurrent","log","href","attention","onClick","message","tech","dist_default","format","date","M","toast","html","Preloader","state","getLogs","_callee","_context","_x","_ref$log","logs","loading","useEffect","layout_Preloader","length","map","logs_LogItem","key","AddBtn","getTechs","_ref$tech","techs","t","firstName","lastName","modalStyle","width","height","addLog","_ref2","_callee2","_context2","body","JSON","stringify","headers","Content-Type","_x2","_useState","useState","_useState2","slicedToArray","setMessage","_useState3","_useState4","setAttention","_useState5","_useState6","setTech","name","target","disabled","techs_TechSelectOptions","checked","newLog","Date","updateLog","_ref4","_callee4","_context4","_x4","updLog","addTech","setFirstName","setLastName","deleteTech","techs_TechItem","initialState","error","combineReducers","undefined","action","objectSpread","toConsumableArray","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","es","react","layout_SearchBar","layout_AddBtn","logs_AddLogModal","logs_EditLogModal","techs_AddTechModal","techs_TechListModal","logs_Logs","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ee0a1f9b.chunk.js","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from './types';\n\n// export const getLogs = () => {\n//   return async dispatch => {\n//     setLoading();\n\n//     const res = await fetch('/logs');\n//     const data = await res.json();\n\n//     dispatch({\n//       type: GET_LOGS,\n//       payload: data\n//     });\n//   };\n// };\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch('https://my-json-server.typicode.com/ghousemohamed/it-logger/logs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Add new log\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch('https://my-json-server.typicode.com/ghousemohamed/it-logger/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Delete log from server\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Update log on server\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(`https://my-json-server.typicode.com/ghousemohamed/it-logger/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const data = await res.json();\n\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Search server logs\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(`https://my-json-server.typicode.com/ghousemohamed/it-logger/logs?q=${text}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Set current log\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n};\n\n// Clear current log\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';\n","import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { searchLogs } from '../../actions/logActions';\n\nconst SearchBar = ({ searchLogs }) => {\n  const text = useRef('');\n\n  const onChange = e => {\n    searchLogs(text.current.value);\n  };\n\n  return (\n    <nav style={{ marginBottom: '30px' }} className='blue'>\n      <div className='nav-wrapper'>\n        <form>\n          <div className='input-field'>\n            <input\n              id='search'\n              type='search'\n              placeholder='Search Logs..'\n              ref={text}\n              onChange={onChange}\n            />\n            <label className='label-icon' htmlFor='search'>\n              <i className='material-icons'>search</i>\n            </label>\n            <i className='material-icons'>close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nSearchBar.propTypes = {\n  searchLogs: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { searchLogs }\n)(SearchBar);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteLog, setCurrent } from '../../actions/logActions';\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log.id);\n    M.toast({ html: 'Log Deleted' });\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        <a\n          href='#edit-log-modal'\n          className={`modal-trigger ${\n            log.attention ? 'red-text' : 'blue-text'\n          }`}\n          onClick={() => setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className='grey-text'>\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\n          <span className='black-text'>{log.tech}</span> on{' '}\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\n        </span>\n        <a href='#!' onClick={onDelete} className='secondary-content'>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteLog, setCurrent }\n)(LogItem);\n","import React from 'react';\n\nconst Preloader = () => {\n  return (\n    <div className='progress blue lighten-4'>\n      <div className='indeterminate blue' />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className='center'>No logs to show...</p>\n      ) : (\n        logs.map(log => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(\n  mapStateToProps,\n  { getLogs }\n)(Logs);\n","import React from 'react';\n\nconst AddBtn = () => {\n  return (\n    <div className='fixed-action-btn'>\n      <a\n        href='#add-log-modal'\n        className='btn-floating btn-large blue darken-2 modal-trigger'\n      >\n        <i className='large material-icons'>add</i>\n      </a>\n      <ul>\n        <li>\n          <a\n            href='#tech-list-modal'\n            className='btn-floating green modal-trigger'\n          >\n            <i className='material-icons'>person</i>\n          </a>\n        </li>\n        <li>\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\n            <i className='material-icons'>person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from './types';\n\n// Get techs from server\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch('https://my-json-server.typicode.com/ghousemohamed/it-logger/techs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Add technician to server\nexport const addTech = tech => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch('https://my-json-server.typicode.com/ghousemohamed/it-logger/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_TECH,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const deleteTech = id => async dispatch => {\n  try {\n    setLoading();\n\n    await fetch(`https://my-json-server.typicode.com/ghousemohamed/it-logger/techs/${id}`, {\n      method: 'DELETE'\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map(t => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTechs }\n)(TechSelectOptions);\n","import React, { useState } from 'react';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addLog } from '../../actions/logActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and tech' });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n\n      addLog(newLog);\n\n      M.toast({ html: `Log added by ${tech}` });\n\n      // Clear Fields\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='add-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            <label htmlFor='message' className='active'>\n              Log Message\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\n\nexport default connect(\n  null,\n  { addLog }\n)(AddLogModal);\n","import React, { useState, useEffect } from 'react';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { updateLog } from '../../actions/logActions';\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and tech' });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n\n      updateLog(updLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // Clear Fields\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateLog }\n)(EditLogModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTech } from '../../actions/techActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const onSubmit = () => {\n    if (firstName === '' || lastName === '') {\n      M.toast({ html: 'Please enter the first and last name' });\n    } else {\n      addTech({\n        firstName,\n        lastName\n      });\n\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\n\n      // Clear Fields\n      setFirstName('');\n      setLastName('');\n    }\n  };\n\n  return (\n    <div id='add-tech-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>New Technician</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='firstName'\n              value={firstName}\n              onChange={e => setFirstName(e.target.value)}\n            />\n            <label htmlFor='firstName' className='active'>\n              First Name\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='lastName'\n              value={lastName}\n              onChange={e => setLastName(e.target.value)}\n            />\n            <label htmlFor='lastName' className='active'>\n              Last Name\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addTech }\n)(AddTechModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteTech } from '../../actions/techActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\n  const onDelete = () => {\n    deleteTech(id);\n    M.toast({ html: 'Technician deleted' });\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        {firstName} {lastName}\n        <a href='#!' className='secondary-content' onClick={onDelete}>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteTech }\n)(TechItem);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TechItem from './TechItem';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id='tech-list-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>Technician List</h4>\n        <ul className='collection'>\n          {!loading &&\n            techs !== null &&\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTechs }\n)(TechListModal);\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from '../actions/types';\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map(log =>\n          log.id === action.payload.id ? action.payload : log\n        )\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport logReducer from './logReducer';\nimport techReducer from './techReducer';\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}